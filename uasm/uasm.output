Useless nonterminals

   label


Terminals which are not used

   LPAREN
   RPAREN


Useless rules

   10 label: SIG_VAL
   11      | SIG_ADDR


Grammar

    0 $accept: program $end

    1 program: statement
    2        | program statement

    3 statement: SIG_ADDR COLON
    4          | SIG_VAL COLON sig_expr SEMI_COLON
    5          | sig_expr SEMI_COLON

    6 sig_expr: sig_line
    7         | sig_expr COMMA sig_line

    8 sig_line: SIG_LINE
    9         | TILDE sig_line


Terminals, with rules where they appear

$end (0) 0
error (256)
SIG_VAL (258) 4
SIG_ADDR (259) 3
SIG_LINE (260) 8
COLON (261) 3 4
SEMI_COLON (262) 4 5
COMMA (263) 7
LPAREN (264)
RPAREN (265)
TILDE (266) 9


Nonterminals, with rules where they appear

$accept (12)
    on left: 0
program (13)
    on left: 1 2, on right: 0 2
statement (14)
    on left: 3 4 5, on right: 1 2
sig_expr (15)
    on left: 6 7, on right: 4 5 7
sig_line (16)
    on left: 8 9, on right: 6 7 9


state 0

    0 $accept: . program $end

    SIG_VAL   shift, and go to state 1
    SIG_ADDR  shift, and go to state 2
    SIG_LINE  shift, and go to state 3
    TILDE     shift, and go to state 4

    program    go to state 5
    statement  go to state 6
    sig_expr   go to state 7
    sig_line   go to state 8


state 1

    4 statement: SIG_VAL . COLON sig_expr SEMI_COLON

    COLON  shift, and go to state 9


state 2

    3 statement: SIG_ADDR . COLON

    COLON  shift, and go to state 10


state 3

    8 sig_line: SIG_LINE .

    $default  reduce using rule 8 (sig_line)


state 4

    9 sig_line: TILDE . sig_line

    SIG_LINE  shift, and go to state 3
    TILDE     shift, and go to state 4

    sig_line  go to state 11


state 5

    0 $accept: program . $end
    2 program: program . statement

    $end      shift, and go to state 12
    SIG_VAL   shift, and go to state 1
    SIG_ADDR  shift, and go to state 2
    SIG_LINE  shift, and go to state 3
    TILDE     shift, and go to state 4

    statement  go to state 13
    sig_expr   go to state 7
    sig_line   go to state 8


state 6

    1 program: statement .

    $default  reduce using rule 1 (program)


state 7

    5 statement: sig_expr . SEMI_COLON
    7 sig_expr: sig_expr . COMMA sig_line

    SEMI_COLON  shift, and go to state 14
    COMMA       shift, and go to state 15


state 8

    6 sig_expr: sig_line .

    $default  reduce using rule 6 (sig_expr)


state 9

    4 statement: SIG_VAL COLON . sig_expr SEMI_COLON

    SIG_LINE  shift, and go to state 3
    TILDE     shift, and go to state 4

    sig_expr  go to state 16
    sig_line  go to state 8


state 10

    3 statement: SIG_ADDR COLON .

    $default  reduce using rule 3 (statement)


state 11

    9 sig_line: TILDE sig_line .

    $default  reduce using rule 9 (sig_line)


state 12

    0 $accept: program $end .

    $default  accept


state 13

    2 program: program statement .

    $default  reduce using rule 2 (program)


state 14

    5 statement: sig_expr SEMI_COLON .

    $default  reduce using rule 5 (statement)


state 15

    7 sig_expr: sig_expr COMMA . sig_line

    SIG_LINE  shift, and go to state 3
    TILDE     shift, and go to state 4

    sig_line  go to state 17


state 16

    4 statement: SIG_VAL COLON sig_expr . SEMI_COLON
    7 sig_expr: sig_expr . COMMA sig_line

    SEMI_COLON  shift, and go to state 18
    COMMA       shift, and go to state 15


state 17

    7 sig_expr: sig_expr COMMA sig_line .

    $default  reduce using rule 7 (sig_expr)


state 18

    4 statement: SIG_VAL COLON sig_expr SEMI_COLON .

    $default  reduce using rule 4 (statement)
