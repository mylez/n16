Grammar

    0 $accept: program $end

    1 program: statement
    2        | program statement

    3 statement: LABEL_IDENTIFIER ':'
    4          | VALUE_IDENTIFIER ':' signal_expr ';'
    5          | signal_expr ';'
    6          | '<' number '>'

    7 signal_expr: signal_identifier
    8            | signal_expr ',' signal_identifier

    9 signal_identifier: IDENTIFIER
   10                  | VALUE_IDENTIFIER

   11 number: NUMBER_DEC
   12       | NUMBER_HEX


Terminals, with rules where they appear

$end (0) 0
',' (44) 8
':' (58) 3 4
';' (59) 4 5
'<' (60) 6
'>' (62) 6
error (256)
IDENTIFIER (258) 9
LABEL_IDENTIFIER (259) 3
VALUE_IDENTIFIER (260) 4 10
NUMBER_HEX (261) 12
NUMBER_DEC (262) 11


Nonterminals, with rules where they appear

$accept (13)
    on left: 0
program (14)
    on left: 1 2, on right: 0 2
statement (15)
    on left: 3 4 5 6, on right: 1 2
signal_expr (16)
    on left: 7 8, on right: 4 5 8
signal_identifier (17)
    on left: 9 10, on right: 7 8
number (18)
    on left: 11 12, on right: 6


State 0

    0 $accept: . program $end

    IDENTIFIER        shift, and go to state 1
    LABEL_IDENTIFIER  shift, and go to state 2
    VALUE_IDENTIFIER  shift, and go to state 3
    '<'               shift, and go to state 4

    program            go to state 5
    statement          go to state 6
    signal_expr        go to state 7
    signal_identifier  go to state 8


State 1

    9 signal_identifier: IDENTIFIER .

    $default  reduce using rule 9 (signal_identifier)


State 2

    3 statement: LABEL_IDENTIFIER . ':'

    ':'  shift, and go to state 9


State 3

    4 statement: VALUE_IDENTIFIER . ':' signal_expr ';'
   10 signal_identifier: VALUE_IDENTIFIER .

    ':'  shift, and go to state 10

    $default  reduce using rule 10 (signal_identifier)


State 4

    6 statement: '<' . number '>'

    NUMBER_HEX  shift, and go to state 11
    NUMBER_DEC  shift, and go to state 12

    number  go to state 13


State 5

    0 $accept: program . $end
    2 program: program . statement

    $end              shift, and go to state 14
    IDENTIFIER        shift, and go to state 1
    LABEL_IDENTIFIER  shift, and go to state 2
    VALUE_IDENTIFIER  shift, and go to state 3
    '<'               shift, and go to state 4

    statement          go to state 15
    signal_expr        go to state 7
    signal_identifier  go to state 8


State 6

    1 program: statement .

    $default  reduce using rule 1 (program)


State 7

    5 statement: signal_expr . ';'
    8 signal_expr: signal_expr . ',' signal_identifier

    ';'  shift, and go to state 16
    ','  shift, and go to state 17


State 8

    7 signal_expr: signal_identifier .

    $default  reduce using rule 7 (signal_expr)


State 9

    3 statement: LABEL_IDENTIFIER ':' .

    $default  reduce using rule 3 (statement)


State 10

    4 statement: VALUE_IDENTIFIER ':' . signal_expr ';'

    IDENTIFIER        shift, and go to state 1
    VALUE_IDENTIFIER  shift, and go to state 18

    signal_expr        go to state 19
    signal_identifier  go to state 8


State 11

   12 number: NUMBER_HEX .

    $default  reduce using rule 12 (number)


State 12

   11 number: NUMBER_DEC .

    $default  reduce using rule 11 (number)


State 13

    6 statement: '<' number . '>'

    '>'  shift, and go to state 20


State 14

    0 $accept: program $end .

    $default  accept


State 15

    2 program: program statement .

    $default  reduce using rule 2 (program)


State 16

    5 statement: signal_expr ';' .

    $default  reduce using rule 5 (statement)


State 17

    8 signal_expr: signal_expr ',' . signal_identifier

    IDENTIFIER        shift, and go to state 1
    VALUE_IDENTIFIER  shift, and go to state 18

    signal_identifier  go to state 21


State 18

   10 signal_identifier: VALUE_IDENTIFIER .

    $default  reduce using rule 10 (signal_identifier)


State 19

    4 statement: VALUE_IDENTIFIER ':' signal_expr . ';'
    8 signal_expr: signal_expr . ',' signal_identifier

    ';'  shift, and go to state 22
    ','  shift, and go to state 17


State 20

    6 statement: '<' number '>' .

    $default  reduce using rule 6 (statement)


State 21

    8 signal_expr: signal_expr ',' signal_identifier .

    $default  reduce using rule 8 (signal_expr)


State 22

    4 statement: VALUE_IDENTIFIER ':' signal_expr ';' .

    $default  reduce using rule 4 (statement)
